#include "stdafx.h"
#include <iostream>

using namespace std;

struct tim
{
	double Re, Im;
	void in()
	{
		cout << "Enter a real part:" << endl;
		cin >> Re;
		cout << "Enter an imagine part:" << endl;
		cin >> Im;
	}
	void out()
	{
		cout << "Re(z)= " << Re << " " << "Im(z)= " << Im << endl;
	}
	/*void math(double r1,double i1)
	{
	cout <<"z1+z2: "<< "Re = " << r1 << "+" << Re << " = " << r1 + Re << "\n" << "Im = " << i1 << "+" << Im << " = " << i1 + Im << endl;
	cout << "z1*z2: " << "Re = " << Re*r1-Im*i1 << "Im = " <<Re*i1+r1*Im << endl;
	cout << "z1/z2: " << "Re = " << (Re*r1 + i1*Im) / (i1*i1 + r1*r1) << " " << "Im = " << (r1*Im - Re*i1) / (i1*i1 + r1*r1) << endl;
	}*/
};
struct tim1
{
	double Re1, Re2, Im1, Im2;
	void in2()
	{
		cout << "Enter a real part :" << endl;
		cin >> Re1;
		cout << "Enter an imagine part " << endl;
		cin >> Im1;
	}
	void in3()
	{
		cout << "Enter a real part :" << endl;
		cin >> Re2;
		cout << "Enter an imagine part " << endl;
		cin >> Im2;
	}
	void math2(double *a, double *b,double *c,double *d)
	{
		cout << "z1+z2: " << "Re = " << *a << "+" << *c << " = " << *a + *c << "\n" << "Im = " << *b << "+" << *d << " = " << *b + *d << endl;
		cout << "z1*z2: " << "Re = " << *a**c - *b**d << "Im = " << *a**c + *c**b << endl;
		cout << "z1/z2: " << "Re = " << (*a**c - *b**d) / (*c**c + *b**b) << " " << "Im = " << (*b**c - *a**d) / (*c**c + *b**b) << endl;
	}
};
int main()
{
	tim compl;
	tim1 compl2;
	tim1 compl3;
	/*compl.in();
	compl.out();
	compl.math(2.0, 3.2);*/
	compl2.in2();
	compl3.in3();

	//cout << compl2.Im1 << " " << compl3.Im2 << endl;
	compl2.math2(&compl2.Re1,&compl2.Im1,&compl3.Re2,&compl3.Im2);
	return 0;
}